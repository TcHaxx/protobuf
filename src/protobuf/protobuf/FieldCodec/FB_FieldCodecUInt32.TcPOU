<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_FieldCodecUInt32" Id="{65e787ec-494b-4a47-a750-1e70e9a278a2}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_FieldCodecUInt32 IMPLEMENTS I_FieldCodec
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
    nValue : DINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="CalculatePackedDataSize" Id="{8b6ca985-cf9a-47d2-b259-fad382f9c60e}">
      <Declaration><![CDATA[METHOD CalculatePackedDataSize : HRESULT
VAR_INPUT CONSTANT
	anyFirstElem	: T_Any;
	nLength	        : UDINT;        // items to write
END_VAR
VAR_OUTPUT
    nPackedDataSize : UDINT;
END_VAR
VAR
    anyItem         : T_ANY;
    i               : UDINT;
    nValue          : UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[anyItem := anyFirstElem;

IF nLength < 1 THEN
    nPackedDataSize := 0;
    RETURN;
END_IF

FOR i := 0  TO nLength - 1 DO
    anyItem.pValue := anyFirstElem.pValue + (i * TO_UDINT(anyFirstElem.diSize));
    MEMCPY(destAddr:= ADR(nValue), srcAddr:= anyItem.pValue, n:= TO_UDINT(anyFirstElem.diSize));
    nPackedDataSize := nPackedDataSize + F_ComputeUInt32Size(nValue);
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Property Name="EndTag" Id="{7feb5c2d-0808-494e-8653-8ddce408334a}">
      <Declaration><![CDATA[{warning 'Add property implementation'}
(* Gets the end tag of the codec or 0 if there is no end tag*)
PROPERTY EndTag : UDINT
]]></Declaration>
      <Get Name="Get" Id="{4635e539-8b21-44bb-8db7-95c56c9f6a5e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="ipMessage" Id="{68d2377d-d511-4956-9d44-cf736ef3f4c4}">
      <Declaration><![CDATA[{warning 'Add property implementation'}
PROPERTY ipMessage : I_Message
]]></Declaration>
      <Get Name="Get" Id="{221b0430-681a-4771-b724-2ce1f8cf7aaf}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{a630f003-25b5-44a7-a708-636f8188d44d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="IsPackedRepeatedField" Id="{4fbc3fd0-d99f-4835-88b1-9d66b0f4a24d}">
      <Declaration><![CDATA[METHOD IsPackedRepeatedField : BOOL
VAR_INPUT
	nTag	: UDINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IsPackedRepeatedField := F_IsPackedRepeatedField(nTag);]]></ST>
      </Implementation>
    </Method>
    <Property Name="pParseContext" Id="{a25d2ca2-4af8-4d38-8f0b-5665176b8621}">
      <Declaration><![CDATA[{warning 'Add property implementation'}
PROPERTY pParseContext : POINTER TO FB_ParseContext
]]></Declaration>
      <Set Name="Set" Id="{b90ffabe-cb8a-4cfb-9d18-7a5ca6b3bf85}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="pWriteContext" Id="{1a286269-9dba-4b79-a112-6166f085bd1b}">
      <Declaration><![CDATA[{warning 'Add property implementation'}
PROPERTY pWriteContext : POINTER TO FB_WriteContext
]]></Declaration>
      <Set Name="Set" Id="{130bdb3c-caf6-4981-867c-91a421d2b1bc}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="Tag" Id="{c866ae2d-c6ee-472c-a385-53b84b55a988}">
      <Declaration><![CDATA[{warning 'Add property implementation'}
(* Gets the tag of the codec.*)
PROPERTY Tag : UDINT
]]></Declaration>
      <Get Name="Get" Id="{e6e0b0b5-7399-42a7-8181-c494fa7ac10f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ValueReader" Id="{4c83271b-1e30-4f01-9fbe-2c14057e30c1}">
      <Declaration><![CDATA[
METHOD ValueReader : HRESULT
VAR_IN_OUT      
    stCtx : ST_ParseContext;
END_VAR
VAR_OUTPUT
	anyOut	: T_Any;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
ValueReader := F_ParseRawVarint32(stCtx, nValue);
anyOut := F_ToAnyType(anyArg:= nValue);]]></ST>
      </Implementation>
    </Method>
    <Method Name="ValueWriter" Id="{f1e76788-fd58-419b-bf43-131ca6059542}">
      <Declaration><![CDATA[METHOD ValueWriter : HRESULT
VAR_IN_OUT
    stCtx  : ST_WriteContext;
END_VAR
VAR_INPUT
	anyIn	: ANY;
END_VAR
VAR
    nValue  : UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
// nValue := PUDINT_TO_UDINT(anyIn.pValue);
MEMCPY(destAddr:= ADR(nValue), srcAddr:= anyIn.pValue, n:= TO_UDINT(anyIn.diSize));
ValueWriter := F_WriteUInt32(stCtx, nValue);]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>