<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_FieldCodecUInt64" Id="{5ba0711f-ebaa-4edb-91c7-be0d3c09365f}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_FieldCodecUInt64 IMPLEMENTS I_FieldCodec
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
    nValue : ULINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="CalculatePackedDataSize" Id="{f2ecccaf-ba10-4463-aa5f-4d335a019192}">
      <Declaration><![CDATA[{warning 'TODO: Implement CalculatePackedDataSize'}
{attribute 'analysis' := '-33'}
METHOD CalculatePackedDataSize : HRESULT
VAR_INPUT CONSTANT
	anyFirstElem	: T_Any;
	nLength	        : UDINT;        // items to write
END_VAR
VAR_OUTPUT
    nPackedDataSize : UDINT;
END_VAR
VAR
    anyItem         : T_ANY;
    i               : UDINT;
    nValue          : ULINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[anyItem := anyFirstElem;

IF nLength < 1 THEN
    nPackedDataSize := 0;
    RETURN;
END_IF

FOR i := 0  TO nLength - 1 DO
    anyItem.pValue := anyFirstElem.pValue + (i * TO_UDINT(anyFirstElem.diSize)); 
    nValue := PULINT_TO_ULINT(anyItem.pValue);
    nPackedDataSize := nPackedDataSize + F_ComputeUInt64Size(nValue);
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="IsPackedRepeatedField" Id="{d6789674-9631-49a0-be2a-53423994d02e}">
      <Declaration><![CDATA[METHOD IsPackedRepeatedField : BOOL
VAR_INPUT
	nTag	: UDINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IsPackedRepeatedField := F_IsPackedRepeatedField(nTag);]]></ST>
      </Implementation>
    </Method>
    <Method Name="ValueReader" Id="{913656d6-706a-424e-b1c5-2846f84f7f1b}">
      <Declaration><![CDATA[
METHOD ValueReader : HRESULT
VAR_IN_OUT CONSTANT
	aBuffer	: ARRAY [*] OF BYTE;
END_VAR
VAR_IN_OUT
	stState	: ST_ParserInternalState;
END_VAR
VAR_OUTPUT
	anyOut	: T_Any;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
ValueReader := F_ParseRawVarint64(aBuffer, stState, nValue);
anyOut := F_ToAnyType(anyArg:= nValue);]]></ST>
      </Implementation>
    </Method>
    <Method Name="ValueWriter" Id="{f7da272c-0468-4337-a640-77d2a8d5739b}">
      <Declaration><![CDATA[{warning 'Add method implementation '}
{attribute 'analysis' := '-33'}
METHOD ValueWriter : HRESULT
VAR_IN_OUT
	aBuffer	: ARRAY [*] OF BYTE;
END_VAR
VAR_IN_OUT
	stState	: ST_WriterInternalState;
END_VAR
VAR_INPUT
    anyIn : T_ANY;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>