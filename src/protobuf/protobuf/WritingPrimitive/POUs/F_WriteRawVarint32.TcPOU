<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="F_WriteRawVarint32" Id="{1ebc98d9-6b9e-427e-9469-28c03076e903}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION F_WriteRawVarint32 : HRESULT
VAR_IN_OUT      
    stCtx : ST_WriteContext;
END_VAR
VAR_INPUT
    anyVarInt32 : ANY_INT;
END_VAR
VAR
    nValue  : UDINT;
    pByte   : POINTER TO BYTE;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
IF anyVarInt32.diSize > SIZEOF(UDINT) THEN
    F_WriteRawVarint32 := stCtx.stState.eWriterErrorCode := E_WriterErrorCode.InvalidDataType;     
    stCtx.stState.bError := TRUE;
    RETURN; 
END_IF

// Enough capacity left for theoretical max Varint32?
IF (stCtx.stState.nBufferPos + SIZEOF(nValue) + 1) > stCtx.stState.nBufferSize THEN
    F_WriteRawVarint32 := stCtx.stState.eWriterErrorCode := E_WriterErrorCode.TruncatedMessage;     
    stCtx.stState.bError := TRUE;
    RETURN; 
END_IF

nValue := PUDINT_TO_UDINT(in:= anyVarInt32.pValue);

pByte := stCtx.stBuffer.pBuffer + stCtx.stState.nBufferPos;

// fastpath for a common case of single byte value
IF nValue < 16#80 THEN
    pByte^ :=  TO_BYTE(nValue);
    stCtx.stState.nBufferPos := stCtx.stState.nBufferPos + 1;
    F_WriteRawVarint32 := S_OK;
    RETURN;
END_IF

WHILE (stCtx.stState.nBufferPos < stCtx.stState.nBufferSize) DO
    pByte := stCtx.stBuffer.pBuffer + stCtx.stState.nBufferPos;
    IF nValue > 16#7F THEN
        pByte^ := TO_BYTE((nValue AND 16#7F) OR 16#80);
        nValue := SHR(nValue, 7);
        stCtx.stState.nBufferPos := stCtx.stState.nBufferPos + 1;
    ELSE
        pByte^ := TO_BYTE(nValue);
        stCtx.stState.nBufferPos := stCtx.stState.nBufferPos + 1;
        F_WriteRawVarint32 := S_OK;
        RETURN;
    END_IF
END_WHILE

// should never reach
F_WriteRawVarint32 := E_WriterErrorCode.InternalError;]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>