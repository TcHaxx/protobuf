<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_ExampleMessage" Id="{50e369dd-486a-4bd8-ad20-882d7702b97e}" SpecialFunc="None">
    <Declaration><![CDATA[// {attribute 'hide_all_locals'}
FUNCTION_BLOCK INTERNAL FINAL FB_ExampleMessage IMPLEMENTS I_Message
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR

(*
syntax = "proto3";

package Example;

message ST_Example {
  string sName = 1 [(tchaxx.ext.v1.max_string_len) = 256];
  repeated uint32 aUdintArray = 2 [(tchaxx.ext.v1.array_length) = 7];
  int32 nDInt2 = 3 [
    (tchaxx.ext.v1.integer_type) = EIT_DINT,
    (tchaxx.ext.v1.attribute_display_mode) = EDM_BIN
  ];
  string sMyString = 4;
  fixed64 nFixed64 = 5;
  optional sfixed64 nSFixed64 = 6; 
  repeated uint32 aByteArray = 7 [
    (tchaxx.ext.v1.array_length) = 32,
    (tchaxx.ext.v1.integer_type) = EIT_BYTE
  ];
  float fReal = 8;
  repeated double fLReal = 9  [(tchaxx.ext.v1.array_length) = 1];
  bytes aBytes = 10 [(tchaxx.ext.v1.array_length) = 16];
}
*)

VAR
    fbMessageParser : FB_MessageParser(ipMessage:= THIS^);
    fbMessageWriter : FB_MessageWriter(ipMessage:= THIS^);
END_VAR

VAR
    stExample       : ST_Example;
    nField2Index    : UDINT;        // Array aUdintArray
    nField7Index    : UDINT;
    nField9Index    : UDINT;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="CalculateSize" Id="{af151ae5-3c81-4939-a744-f3de0c3ae6c5}">
      <Declaration><![CDATA[{warning 'Add method implementation '}
(* Calculates the size of this message in Protocol Buffer wire format, in bytes.*)
METHOD CalculateSize : UDINT
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="MergeFrom" Id="{92e74d9d-83d8-4035-900e-95dac619ab45}">
      <Declaration><![CDATA[(* Merges the data from the specified coded input stream with the current message.*)
METHOD MergeFrom : HRESULT
VAR_IN_OUT
	fbParseCtx : FB_ParseContext;
END_VAR
VAR
    nTag    : UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[nField2Index := 0;
nField7Index := 0;
nField9Index := 0;

REPEAT   
MergeFrom := fbParseCtx.ReadTag(nTag=>nTag);
IF SUCCEEDED(MergeFrom) AND nTag = 0 THEN
    EXIT;
END_IF;

IF FAILED(MergeFrom) THEN
    MergeFrom := MergeFrom;
    RETURN;
END_IF

CASE nTag OF
    16#0A:         // string (1)
        MergeFrom := fbParseCtx.ReadString(stExample.sName); 
        IF FAILED(MergeFrom) THEN
            RETURN;
        END_IF
    16#12: // repeated uint32 (2)
        MergeFrom := fbParseCtx.ReadRepeatedFieldUint32(
                        anyArray:= F_ToAnyType(stExample.aUdintArray),
                        anyFirstElem:= F_ToAnyType(stExample.aUdintArray[0]),
                        nFieldIndex:= THIS^.nField2Index);
    16#18:  // int32 (3)
        MergeFrom := fbParseCtx.ReadInt32(nValue=> stExample.nDInt2);
      
    16#22:  // string (4)
        MergeFrom := fbParseCtx.ReadString(anyStringOut:= stExample.sMyString);
        
    16#29:  // fixed64 (5)
        MergeFrom := fbParseCtx.ReadFixed64(nValue=> stExample.nFixed64);
        
    16#31:  // sfixed64 (6)
        MergeFrom := fbParseCtx.ReadSFixed64(nValue=> stExample.nSFixed64);
                     
    16#3A:  // repeated uint32 (7)
        MergeFrom := fbParseCtx.ReadRepeatedFieldUint32(
                    anyArray:= F_ToAnyType(stExample.aByteArray),
                    anyFirstElem:= F_ToAnyType(stExample.aByteArray[0]),
                    nFieldIndex:= THIS^.nField7Index);
    16#45:  // float (8)
        MergeFrom := fbParseCtx.ReadFloat(fValue=> stExample.fReal);
    16#4A:  // aLReal (9)
        MergeFrom := fbParseCtx.ReadRepeatedFieldDouble(
                    anyArray:= F_ToAnyType(stExample.aLReal),
                    anyFirstElem:= F_ToAnyType(stExample.aLReal[0]),
                    nFieldIndex:= THIS^.nField9Index);  
    16#52:  // aBytes (10)
        MergeFrom := fbParseCtx.ReadBytes(stExample.aBytes);
ELSE
    MergeFrom := fbParseCtx.SkipLastField();
END_CASE

UNTIL (FAILED(MergeFrom) OR nTag = 0)
END_REPEAT
]]></ST>
      </Implementation>
    </Method>
    <Property Name="MessageValue" Id="{11e74633-0392-4da7-a6e7-41072cb25a3b}">
      <Declaration><![CDATA[PROPERTY MessageValue : T_Any
]]></Declaration>
      <Get Name="Get" Id="{4604595d-4d76-4fa7-8102-f3ac685d48b3}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[MessageValue := F_ToAnyType(anyArg:= THIS^.stExample);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Parser" Id="{dd672f81-8e02-47ac-af92-2c9e68d5a96e}">
      <Declaration><![CDATA[PROPERTY PUBLIC Parser : REFERENCE TO FB_MessageParser]]></Declaration>
      <Get Name="Get" Id="{21d29713-86c4-4cc0-8d15-cf91ebb03728}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Parser REF= THIS^.fbMessageParser;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Writer" Id="{9343b3cc-075a-45e8-82f8-a01c270796d6}">
      <Declaration><![CDATA[(* Writer for this message.*)
PROPERTY Writer : REFERENCE TO FB_MessageWriter
]]></Declaration>
      <Get Name="Get" Id="{81997e23-b7de-47e5-a45e-ca8d521c8ba2}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Writer REF= THIS^.fbMessageWriter;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="WriteTo" Id="{83629895-5d90-4af0-b7ec-deda108511b0}">
      <Declaration><![CDATA[{warning 'Add method implementation '}
{attribute 'analysis' := '-33'}
(* Writes the data to the given coded output stream.*)
METHOD WriteTo : HRESULT
VAR_IN_OUT
	(* Coded output stream to write the data to. *)
	fbWriteCtx	: FB_WriteContext;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>