<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_BazMessage" Id="{98b5f4b2-3063-4e33-a1f5-a23aa9851380}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK INTERNAL FINAL FB_BazMessage IMPLEMENTS I_BufferMessage

(*
syntax = "proto3";

import "tchaxx-extensions.proto";

message Foo
{
  Bar bar = 1;
  repeated Baz baz = 2 [(tchaxx.ext.v1.array_length) = 3];
}

message Bar
{
  string name = 1;
  uint32 age = 2;
  optional string email = 3;
}

message Baz
{
  fixed32 value = 1;
  string name = 2;
}
*)

VAR
	fbMessageParser : FB_MessageParser(ipMessage:= THIS^);
    stBaz : ST_BAZ;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="CalculateSize" Id="{1c2ee7ba-a402-4ec0-b4d2-665e7c82c857}">
      <Declaration><![CDATA[{warning 'Add method implementation '}
(* Calculates the size of this message in Protocol Buffer wire format, in bytes.*)
METHOD CalculateSize : UDINT
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="InternalMergeFrom" Id="{cb841ee4-bfaf-4250-928e-6f996d90d5cb}">
      <Declaration><![CDATA[METHOD InternalMergeFrom : HRESULT
VAR_IN_OUT
    fbCtx   : FB_ParseContext;
END_VAR
VAR
    nTag : UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[REPEAT   
InternalMergeFrom := fbCtx.ReadTag(nTag=> nTag);
IF SUCCEEDED(InternalMergeFrom) AND nTag = 0 THEN
    EXIT;
END_IF;

IF FAILED(InternalMergeFrom) THEN
    RETURN;
END_IF

CASE nTag OF
    16#0D:         // fixed32 value = 1;
          InternalMergeFrom := fbCtx.ReadFixed32(nValue=> stBaz.value);
//      
    16#12:         // string name = 2;
          InternalMergeFrom := fbCtx.ReadString(anyStringOut:= stBaz.name);
ELSE
    InternalMergeFrom := fBCtx.SkipLastField();
END_CASE

UNTIL (FAILED(InternalMergeFrom) OR nTag = 0)
END_REPEAT]]></ST>
      </Implementation>
    </Method>
    <Method Name="InternalWriteTo" Id="{7cc85d24-c05c-458e-9d2c-a73e9dddf506}">
      <Declaration><![CDATA[{warning 'Add method implementation '}
METHOD InternalWriteTo : HRESULT
VAR_IN_OUT
	stState	: ST_WriterInternalState;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="MergeFrom" Id="{01a656b6-337f-423a-a910-0aa23449dd22}">
      <Declaration><![CDATA[{warning 'Add method implementation '}
(* Merges the data from the specified coded input stream with the current message.*)
METHOD MergeFrom : HRESULT
VAR_IN_OUT
	fbInput	: FB_CodedInputStream;
END_VAR
VAR
    nTag : UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
REPEAT   
MergeFrom := fbInput.ReadTag(nTag=>nTag);
IF SUCCEEDED(MergeFrom) AND nTag = 0 THEN
    EXIT;
END_IF;

IF FAILED(MergeFrom) THEN
    MergeFrom := MergeFrom;
    RETURN;
END_IF

CASE nTag OF
    16#0A:         // Bar bar = 1;
        fbInput.ReadRawMessage(iMessage:= THIS^);
           
 
ELSE
    MergeFrom := fBInput.SkipLastField();
END_CASE

UNTIL (FAILED(MergeFrom) OR nTag = 0)
END_REPEAT
]]></ST>
      </Implementation>
    </Method>
    <Property Name="MessageDescriptor" Id="{0ea8b4c3-1a93-40c2-be4f-39357961749f}">
      <Declaration><![CDATA[{warning 'Add property implementation'}
(* Descriptor for this message. All instances are expected to return the same descriptor,
 and for generated types this will be an explicitly-implemented member, returning the
 same value as the static property declared on the type.*)
PROPERTY MessageDescriptor : REFERENCE TO FB_MessageDescriptor
]]></Declaration>
      <Get Name="Get" Id="{b8c4dab9-25f7-4332-b043-1d788e814c1e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="MessageValue" Id="{81753d7c-9326-4f50-a258-bbda360d3bd0}">
      <Declaration><![CDATA[PROPERTY MessageValue : T_Any
]]></Declaration>
      <Get Name="Get" Id="{0e95fa4c-9f32-4508-9509-ea144d415c9e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[MessageValue := F_ToAnyType(anyArg:= THIS^.stBaz);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Parser" Id="{44ad5c3c-6e61-4f91-ad79-8466a6ade78b}">
      <Declaration><![CDATA[PROPERTY PUBLIC Parser : REFERENCE TO FB_MessageParser]]></Declaration>
      <Get Name="Get" Id="{9f4894c5-7aca-4fc0-9bb5-0e9841979a9b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Parser REF= THIS^.fbMessageParser;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="WriteTo" Id="{b8006ca3-cc58-474d-a5aa-598573cf89d2}">
      <Declaration><![CDATA[{warning 'Add method implementation '}
(* Writes the data to the given coded output stream.*)
METHOD WriteTo
VAR_IN_OUT
	(* Coded output stream to write the data to. *)
	fbOutput	: FB_CodedOutputStream;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>