<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_RepeatedStringMessageTests" Id="{5ec75848-e7f7-4133-b1dd-36f6b0136090}" SpecialFunc="None">
    <Declaration><![CDATA[// {attribute 'hide_all_locals'}
FUNCTION_BLOCK INTERNAL FINAL FB_RepeatedStringMessageTests IMPLEMENTS I_Message
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR

(*
syntax = "proto3";

message RepStringTest {
      repeated string RepStrings = 1 [
        (tchaxx.ext.v1.array_length) = 16,
        (tchaxx.ext.v1.max_string_len) = 32];
    }
*)

VAR
    fbMessageParser : FB_MessageParser(ipMessage:= THIS^);
    fbMessageWriter : FB_MessageWriter(ipMessage:= THIS^);
END_VAR

VAR
    aRepeatedStrings    : ARRAY [0..15] OF STRING(32);
	fbRepeatedRepStringsCodec	: FB_FieldCodecString(nTag:= 16#0A);
	fbRepeatedRepStrings		: FB_RepeatedField(anyArray:= F_ToAnyType(aRepeatedStrings), anyFirstElem:= F_ToAnyType(aRepeatedStrings[0]));
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="CalculateSize" Id="{0452dc27-cdc5-4b88-8b67-f0ed717c838b}">
      <Declaration><![CDATA[{warning 'Add method implementation '}
(* Calculates the size of this message in Protocol Buffer wire format, in bytes.*)
METHOD CalculateSize : UDINT
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="MergeFrom" Id="{2889f9ff-159c-4b88-9bc6-f55d0596e20d}">
      <Declaration><![CDATA[(* Merges the data from the specified coded input stream with the current message.*)
METHOD MergeFrom : HRESULT
VAR_IN_OUT
	fbParseCtx : FB_ParseContext;
END_VAR
VAR
    nTag    : UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
REPEAT   
MergeFrom := fbParseCtx.ReadTag(nTag=>nTag);
IF SUCCEEDED(MergeFrom) AND nTag = 0 THEN
    EXIT;
END_IF;

IF FAILED(MergeFrom) THEN
    MergeFrom := MergeFrom;
    RETURN;
END_IF

CASE nTag OF
    16#0A:         // repeated string (1)
       MergeFrom := fbRepeatedRepStrings.AddEntriesFrom(fbParseCtx, ipFieldCodec:= fbRepeatedRepStringsCodec);
           
 
ELSE
    MergeFrom := fbParseCtx.SkipLastField();
END_CASE

UNTIL (FAILED(MergeFrom) OR nTag = 0)
END_REPEAT
]]></ST>
      </Implementation>
    </Method>
    <Property Name="MessageValue" Id="{67d823ce-54d1-458c-856d-92f9d16fbd70}">
      <Declaration><![CDATA[PROPERTY MessageValue : T_Any
]]></Declaration>
      <Get Name="Get" Id="{d6e3df71-b25b-4a3d-9256-24349cc0e012}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[MessageValue := F_ToAnyType(anyArg:= THIS^.aRepeatedStrings);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Parser" Id="{9d9a84d5-eb4a-4abb-8518-acd3e8a5cac7}">
      <Declaration><![CDATA[PROPERTY PUBLIC Parser : REFERENCE TO FB_MessageParser]]></Declaration>
      <Get Name="Get" Id="{8c3c704e-b042-4bc4-ba1e-c6444118c347}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Parser REF= THIS^.fbMessageParser;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Writer" Id="{d5fd582d-7322-4920-9b8b-87fb7bbb2716}">
      <Declaration><![CDATA[(* Writer for this message.*)
PROPERTY Writer : REFERENCE TO FB_MessageWriter
]]></Declaration>
      <Get Name="Get" Id="{cbf982c5-cabe-4399-a0c6-1f25dd4bef63}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Writer REF= THIS^.fbMessageWriter;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="WriteTo" Id="{312eaa5a-dd8d-4886-9dde-bce1bb39e67b}">
      <Declaration><![CDATA[{warning 'Add method implementation '}
{attribute 'analysis' := '-33'}
(* Writes the data to the given coded output stream.*)
METHOD WriteTo : HRESULT
VAR_IN_OUT
	(* Coded output stream to write the data to. *)
	fbWriteCtx	: FB_WriteContext;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>