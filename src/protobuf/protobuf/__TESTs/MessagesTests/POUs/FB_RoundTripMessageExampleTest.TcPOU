<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_RoundTripMessageExampleTest" Id="{b0878f16-b61f-4f52-a431-46c3bbed0dd4}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK INTERNAL FINAL FB_RoundTripMessageExampleTest EXTENDS FB_TestSuite
VAR CONSTANT
    cExpectedBytes : ARRAY[0..176] OF BYTE := [16#0A, 16#0B, 16#54, 16#63, 16#48, 16#61, 16#78, 16#78, 16#20, 16#F0, 16#9F, 16#9A, 16#80, 16#12, 16#08, 16#00, 16#01, 16#02, 16#03, 16#04, 16#B9, 16#0A, 16#45, 16#18, 16#C7, 16#F5, 16#FF, 16#FF, 16#FF, 16#FF, 16#FF, 16#FF, 16#FF, 16#01, 16#22, 16#41, 16#4C, 16#6F, 16#72, 16#65, 16#6D, 16#20, 16#69, 16#70, 16#73, 16#75, 16#6D, 16#20, 16#64, 16#6F, 16#6C, 16#6F, 16#72, 16#20, 16#73, 16#69, 16#74, 16#20, 16#61, 16#6D, 16#65, 16#74, 16#2C, 16#20, 16#63, 16#6F, 16#6E, 16#73, 16#65, 16#74, 16#65, 16#74, 16#75, 16#72, 16#20, 16#73, 16#61, 16#64, 16#69, 16#70, 16#73, 16#63, 16#69, 16#6E, 16#67, 16#20, 16#65, 16#6C, 16#69, 16#74, 16#72, 16#2C, 16#20, 16#73, 16#65, 16#64, 16#20, 16#64, 16#69, 16#61, 16#6D, 16#29, 16#15, 16#CD, 16#5B, 16#07, 16#00, 16#00, 16#00, 16#00, 16#31, 16#EB, 16#32, 16#A4, 16#F8, 16#FF, 16#FF, 16#FF, 16#FF, 16#3A, 16#09, 16#00, 16#01, 16#02, 16#03, 16#04, 16#05, 16#43, 16#08, 16#09, 16#45, 16#85, 16#EB, 16#55, 16#41, 16#4A, 16#20, 16#00, 16#00, 16#00, 16#00, 16#00, 16#00, 16#00, 16#00, 16#00, 16#00, 16#00, 16#00, 16#00, 16#00, 16#F0, 16#BF, 16#3D, 16#0A, 16#D7, 16#A3, 16#70, 16#BD, 16#2A, 16#C0, 16#9A, 16#99, 16#99, 16#99, 16#99, 16#99, 16#1B, 16#C0, 16#52, 16#06, 16#00, 16#01, 16#02, 16#03, 16#04, 16#05];
END_VAR
VAR
    fbParse_SUT     : FB_ExampleMessage;
    fbWrite_SUT     : FB_ExampleMessage;
//     stParseActual   : ST_Example;
//     stWriteActual   : ST_Example;
    aActualBytes    : ARRAY[0..SIZEOF(cExpectedBytes) - 1] OF BYTE;
    hrParseActual   : HRESULT;
    hrWriteActual   : HRESULT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[TEST(__POUNAME());

// Arrange / Act
hrParseActual := fbParse_SUT.Parser.ParseFrom(cExpectedBytes);

fbWrite_SUT.Example := fbParse_SUT.Example;

hrWriteActual := fbWrite_SUT.Writer.WriteTo(aActualBytes);

// Assert

AssertEquals_DINT(Expected:= S_OK, Actual:= hrParseActual, Message:= 'Expected hrParseActual = S_OK');
AssertEquals_DINT(Expected:= S_OK, Actual:= hrWriteActual, Message:= 'Expected hrWriteActual = S_OK');
{warning disable C0041}
AssertArrayEquals_BYTE(Expecteds:= cExpectedBytes, Actuals:= aActualBytes, Message:= 'Bytes differ');

TEST_FINISHED_NAMED(__POUNAME());]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>