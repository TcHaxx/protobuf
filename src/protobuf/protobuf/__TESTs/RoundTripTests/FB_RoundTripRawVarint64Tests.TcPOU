<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_RoundTripRawVarint64Tests" Id="{a9361672-17d8-4c91-aac9-625d17703cb1}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK INTERNAL FINAL FB_RoundTripRawVarint64Tests EXTENDS FB_TestSuite
VAR CONSTANT
    cExpected : ULINT := 41256202580718336;
END_VAR
VAR
    aBuffer         : ARRAY[0..15] OF BYTE;
    stWriterState   : ST_WriterInternalState;
    stParserState   : ST_ParserInternalState;
    hrWriterActual  : HRESULT;
    hrParserActual  : HRESULT;
    nActual         : ULINT;
    nTmp            : ULINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[TEST(__POUNAME());

// Arrange
stWriterState.nBufferSize := stParserState.nBufferSize := TO_UDINT(UPPER_BOUND(aBuffer, 1) + 1);
stWriterState.nBufferPos := stParserState.nBufferPos := 2;
nTmp := cExpected;

// Act
hrWriterActual := F_WriteRawVarint64(aBuffer, stWriterState, nTmp);
hrParserActual := F_ParseRawVarint64(aBuffer,stParserState, nActual);

// Assert
AssertEquals_DINT(Expected:= S_OK, Actual:= hrWriterActual, Message:= 'Expected hrWriterActual = S_OK');
AssertEquals_DINT(Expected:= S_OK, Actual:= hrParserActual, Message:= 'Expected hrParserActual = S_OK');
AssertEquals_ULINT(Expected:= cExpected, Actual:= nActual, Message:= 'Values differ');

TEST_FINISHED_NAMED(__POUNAME());]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>