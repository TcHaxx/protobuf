<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_WriteRepeatedFieldFixed64Tests" Id="{8a668e2d-90d4-4a0f-be35-63fd5ae81f72}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK INTERNAL FINAL FB_WriteRepeatedFieldFixed64Tests EXTENDS FB_TestSuite
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
    fbFieldCodec : FB_FieldCodecFixed64;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[ShouldWriteRepeatedFieldTheory();]]></ST>
    </Implementation>
    <Method Name="ShouldWriteRepeatedField" Id="{29306db8-b467-4c4f-aa60-ead88ab1b636}">
      <Declaration><![CDATA[METHOD PRIVATE ShouldWriteRepeatedField
VAR_IN_OUT CONSTANT
    aExpected   : ARRAY [*] OF BYTE;
END_VAR
VAR_INPUT
    aValues     : ARRAY [0..7] OF LINT;
    nLength     : UDINT;
    nTag        : UDINT;
    nBufferPosStart     : UDINT;
    nExpectedBufferPos  : UDINT;
    ipFieldCodec        : I_FieldCodec;
END_VAR
VAR_INST
    fbCtx   : FB_WriteContext;
END_VAR
VAR
    aActualBuffer       : ARRAY [0..63] OF BYTE;
    hr                  : HRESULT;

END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Arrange
fbCtx.FromBuffer(aActualBuffer);
fbCtx.refCtx.stState.nBufferPos := nBufferPosStart;

// Act
hr := F_WriteRepeatedField(fbCtx.refCtx, anyArray:= F_ToAnyType(aValues), anyFirstElem:= F_ToAnyType(aValues[0]), nLength, F_MakeTag(nTag, E_WireType.LengthDelimited), ipFieldCodec);

// Assert
AssertEquals_DINT(
    Expected:= S_OK,
    Actual:= hr,
    Message:= 'Expected S_OK instead of error');
    
{warning disable C0041}
AssertArrayEquals_BYTE(Expecteds:= aExpected, Actuals:= aActualBuffer, Message:= '');
 
AssertEquals_UDINT(
    Expected:= nExpectedBufferPos,
    Actual:= fbCtx.refCtx.stState.nBufferPos,
    Message:= CONCAT('Expected stState.nBufferPos to equal ', TO_STRING(nExpectedBufferPos)));

]]></ST>
      </Implementation>
    </Method>
    <Method Name="ShouldWriteRepeatedFieldTheory" Id="{0d555c85-82a7-46df-9de1-6e772cabb42b}">
      <Declaration><![CDATA[METHOD PRIVATE ShouldWriteRepeatedFieldTheory : REFERENCE TO FB_Test
VAR CONSTANT
    cRawValueZeroLength     : ARRAY[0..63] OF BYTE := [16#0A, 16#00];
    cRawValue1              : ARRAY[0..63] OF BYTE := [16#00, 16#0A, 16#30, 16#00, 16#00, 16#00, 16#00, 16#00, 16#00, 16#00, 16#00, 16#D2, 16#04, 16#00, 16#00, 16#00, 16#00, 16#00, 16#00, 16#39, 16#05, 16#00, 16#00, 16#00, 16#00, 16#00, 16#00, 16#FF, 16#FF, 16#FF, 16#FF, 16#FF, 16#FF, 16#FF, 16#FF, 16#4E, 16#61, 16#BC, 16#00, 16#00, 16#00, 16#00, 16#00, 16#34, 16#00, 16#00, 16#80, 16#00, 16#00, 16#00, 16#00];  
END_VAR

VAR CONSTANT
    aExpectedZeroLength     : ARRAY [0..7] OF LINT := [0, 0, 0, 0, 0, 0, 0, 0];
    aExpected1              : ARRAY [0..7] OF LINT := [0, 1234, 1337, -1, 12345678, 2147483700];
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST(__POUNAME());

ShouldWriteRepeatedField(aExpected:= cRawValueZeroLength, aValues:= aExpectedZeroLength, nLength:= 0, nTag:= 1, nBufferPosStart:= 0, nExpectedBufferPos:= 2, ipFieldCodec:= THIS^.fbFieldCodec);
ShouldWriteRepeatedField(aExpected:= cRawValue1, aValues:= aExpected1, nLength:= 6, nTag:= 1, nBufferPosStart:= 1, nExpectedBufferPos:= 51, ipFieldCodec:= THIS^.fbFieldCodec);

TEST_FINISHED_NAMED(__POUNAME());]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>