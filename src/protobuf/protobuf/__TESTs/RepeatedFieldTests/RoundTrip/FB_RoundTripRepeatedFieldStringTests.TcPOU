<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_RoundTripRepeatedFieldStringTests" Id="{ef15ae40-4d23-48db-af8c-71c9ce8a70f7}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK INTERNAL FINAL FB_RoundTripRepeatedFieldStringTests EXTENDS FB_TestSuite
VAR CONSTANT
    cExpected 			: ARRAY[0..7] OF STRING := ['abc', '123', '🤖👾�', 'ABCDEFG HIJK', 'äöüß'];
	cExpectedFieldIndex : UDINT := 5;
END_VAR
VAR
    aBuffer         	: ARRAY[0..255] OF BYTE;
    hrWriterActual  	: HRESULT;
    hrParserActual  	: HRESULT;
    aActuals, aValues	: ARRAY[0..7] OF STRING ;
	nFieldIndex			: UDINT;
	nActualTag			: UDINT;
	nExpectedTag	    : UDINT;
    fbParseCtx_SUT      : FB_ParseContext;
	fbOutputSUT			: FB_CodedOutputStream;
END_VAR
VAR_TEMP
	i : INT;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[TEST(__POUNAME());

// Arrange
nExpectedTag := F_MakeTag(nFieldNumber:= 3, eWireType:= E_WireType.LengthDelimited);
aValues := cExpected;

fbOutputSUT(aBuffer:= aBuffer);
fbOutputSUT.FromBuffer();
fbParseCtx_SUT.Initialize(stBuffer:= F_SpanFromArray(aBuffer));

// Act

hrWriterActual := fbOutputSUT.WriteRepeatedFieldString(
					anyArray:= F_ToAnyType(aValues),
					anyFirstElem:= F_ToAnyType(aValues[0]), 
					nLength:= 5,
					nTag:= nExpectedTag);

fbParseCtx_SUT.ReadTag(nTag=> nActualTag);
hrParserActual := fbParseCtx_SUT.ReadRepeatedFieldString(
					anyArray:= F_ToAnyType(aActuals),
					anyFirstElem:= F_ToAnyType(aActuals[0]),					
					nFieldIndex:= nFieldIndex);

// Assert

AssertEquals_DINT(Expected:= S_OK, Actual:= hrWriterActual, Message:= 'Expected hrWriterActual = S_OK');
AssertEquals_DINT(Expected:= S_OK, Actual:= hrParserActual, Message:= 'Expected hrParserActual = S_OK');
AssertEquals_UDINT(Expected:= nExpectedTag, Actual:= nActualTag, Message:= 'Expeced nActualTag to equal nExpectedTag.');
AssertEquals_UDINT(Expected:= cExpectedFieldIndex, Actual:= nFieldIndex, Message:= 'Expeced nFieldIndex to equal cExpectedFieldIndex.');

FOR i := 0 TO 7 DO 
	AssertEquals_STRING(Expected:= cExpected[i], Actual:= aActuals[i], Message:= CONCAT(CONCAT('Index ', TO_STRING(i)), ' differ'));
END_FOR

TEST_FINISHED_NAMED(__POUNAME());]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>