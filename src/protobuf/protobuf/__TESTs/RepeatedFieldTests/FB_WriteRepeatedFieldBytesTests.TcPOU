<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_WriteRepeatedFieldBytesTests" Id="{39b61dae-9095-4700-ad92-d5599f203003}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK INTERNAL FINAL FB_WriteRepeatedFieldBytesTests EXTENDS FB_TestSuite
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
    fbFieldCodec : FB_FieldCodecBytes;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[ShouldWriteRepeatedFieldTheory();]]></ST>
    </Implementation>
    <Method Name="ShouldWriteRepeatedField" Id="{9c454c45-136c-48c0-8dd6-bf95bc11c34b}">
      <Declaration><![CDATA[METHOD PRIVATE ShouldWriteRepeatedField
VAR_IN_OUT CONSTANT
    aExpected   : ARRAY [*] OF BYTE;
END_VAR
VAR_INPUT
    aValues     : ARRAY[0..3] OF ARRAY[0..4] OF BYTE;
    nLength     : UDINT;
    nTag        : UDINT;
    nBufferPosStart     : UDINT;
    nExpectedBufferPos  : UDINT;
    ipFieldCodec        : I_FieldCodec;
END_VAR
VAR_INST
    stState : ST_WriterInternalState;
END_VAR
VAR
    aActualBuffer       : ARRAY [0..63] OF BYTE;
    hr                  : HRESULT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Arrange
stState.nBufferPos := nBufferPosStart;
stState.nBufferSize := SIZEOF(aActualBuffer);

// Act
hr := F_WriteRepeatedField(aActualBuffer, stState, anyArray:= F_ToAnyType(aValues), anyFirstElem:= F_ToAnyType(aValues[0]), nLength, F_MakeTag(nTag, E_WireType.LengthDelimited), ipFieldCodec);

// Assert
AssertEquals_DINT(
    Expected:= S_OK,
    Actual:= hr,
    Message:= 'Expected S_OK instead of error');
    
{warning disable C0041}
AssertArrayEquals_BYTE(Expecteds:= aExpected, Actuals:= aActualBuffer, Message:= '');
 
AssertEquals_UDINT(
    Expected:= nExpectedBufferPos,
    Actual:= stState.nBufferPos,
    Message:= CONCAT('Expected stState.nBufferPos to equal ', TO_STRING(nExpectedBufferPos)));

]]></ST>
      </Implementation>
    </Method>
    <Method Name="ShouldWriteRepeatedFieldTheory" Id="{c3730157-5938-4cca-9ab0-35780301beb5}">
      <Declaration><![CDATA[METHOD PRIVATE ShouldWriteRepeatedFieldTheory : REFERENCE TO FB_Test
VAR CONSTANT
    aExpectedBufferZeroLen  : ARRAY[0..63] OF BYTE := [16#0A, 16#00];
    aExpectedBuffer1        : ARRAY[0..63] OF BYTE := [16#00, 16#1A, 16#05, 16#00, 16#FF, 16#01, 16#00, 16#00, 16#1A, 16#05, 16#2A, 16#45, 16#7B, 16#00, 16#FF];
END_VAR

VAR CONSTANT
    aValueZeroLen           : ARRAY[0..3] OF ARRAY[0..4] OF BYTE := [];
    aValue1                 : ARRAY[0..3] OF ARRAY[0..4] OF BYTE := [[0, 255, 1], [42, 69, 123, 0 , 255]];
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST(__POUNAME());
ShouldWriteRepeatedField(aExpected:= aExpectedBufferZeroLen, aValues:= aValueZeroLen, nLength:= 0, nTag:= 1, nBufferPosStart:= 0, nExpectedBufferPos:= 2, ipFieldCodec:= THIS^.fbFieldCodec);
ShouldWriteRepeatedField(aExpected:= aExpectedBuffer1, aValues:= aValue1, nLength:= 2, nTag:= 3, nBufferPosStart:= 1, nExpectedBufferPos:= 15, ipFieldCodec:= THIS^.fbFieldCodec);
TEST_FINISHED_NAMED(__POUNAME());]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>