<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="F_ParseTag" Id="{0d9adb1b-9878-4c05-9bf9-a5233e10e2e4}" SpecialFunc="None">
    <Declaration><![CDATA[// Parses the next tag.
// If the end of logical stream was reached, an invalid tag of 0 is returned.
FUNCTION F_ParseTag : HRESULT
VAR_INPUT CONSTANT
    aBuffer : ARRAY [*] OF BYTE;   
END_VAR
VAR_IN_OUT
    stState : ST_ParserInternalState;
END_VAR
VAR_OUTPUT
    nTag : UDINT;
END_VAR

VAR
    nTmp : UDINT;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[
F_ParseTag := S_OK;

// The "nextTag" logic is there only as an optimization for reading non-packed repeated / map
// fields and is strictly speaking not necessary.
IF stState.bHasNextTag THEN
    stState.nLastTag := stState.nNextTag;
    stState.bHasNextTag := FALSE;
    nTag := stState.nLastTag;
    RETURN;
END_IF

// Optimize for the incredibly common case of having at least two bytes left in the buffer,
// and those two bytes being enough to get the tag. This will be true for fields up to 4095.
IF stState.nBufferPos + 2 <= stState.nBufferSize THEN
    nTmp := aBuffer[stState.nBufferPos];
    stState.nBufferPos := stState.nBufferPos + 1;
    IF nTmp < 16#80 THEN
        stState.nLastTag := nTmp;
    ELSE
        F_ParseTag := F_ParseRawVarint32(aBuffer, stState, nTag);
        IF FAILED(F_ParseTag) THEN            
            RETURN;
        END_IF
    END_IF
ELSE   
    // is at end?
    IF stState.nBufferPos = stState.nBufferSize THEN
        nTag := stState.nLastTag := 0;
        RETURN;
    END_IF;
    
    F_ParseTag := F_ParseRawVarint32(aBuffer, stState, nTag);
END_IF

nTag := stState.nLastTag;]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>