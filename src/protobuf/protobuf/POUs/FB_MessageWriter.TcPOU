<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_MessageWriter" Id="{82251ec4-7522-4e16-b95a-4cac6022241a}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK PUBLIC FINAL FB_MessageWriter
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
    fbWriteCtx  : FB_WriteContext;
    ipMessage   : I_Message;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="FB_Init" Id="{f2669fd7-bc5e-416d-a680-ab6a6a2a4d14}">
      <Declaration><![CDATA[//FB_Init is always available implicitly and it is used primarily for initialization.
//The return value is not evaluated. For a specific influence, you can also declare the
//methods explicitly and provide additional code there with the standard initialization
//code. You can evaluate the return value.
METHOD FB_Init: BOOL
VAR_INPUT
    bInitRetains: BOOL; // TRUE: the retain variables are initialized (reset warm / reset cold)
    bInCopyCode: BOOL;  // TRUE: the instance will be copied to the copy code afterward (online change)
    ipMessage   : I_Message;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.ipMessage := ipMessage;]]></ST>
      </Implementation>
    </Method>
    <Method Name="WriteTo" Id="{721f4c0c-dcec-4498-ad06-eeae5ba3bc2f}">
      <Declaration><![CDATA[METHOD PUBLIC WriteTo : HRESULT
VAR_IN_OUT CONSTANT
    aBuffer     : ARRAY[*] OF BYTE;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF ipMessage = 0 THEN
    WriteTo := E_WriterErrorCode.InternalError;
    RETURN;
END_IF

WriteTo := fbWriteCtx.FromBuffer(aBuffer);
IF FAILED(WriteTo) THEN
    RETURN;
END_IF

WriteTo := ipMessage.WriteTo(fbWriteCtx:= fbWriteCtx);]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>