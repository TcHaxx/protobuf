<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="F_WriteRepeatedField" Id="{5403c111-7c0c-4ce8-8ebe-b563f0195a9e}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION INTERNAL F_WriteRepeatedField : HRESULT
VAR_IN_OUT
    aBuffer         : ARRAY [*] OF BYTE;
END_VAR
VAR_IN_OUT
    stState         : ST_WriterInternalState;
END_VAR
VAR_INPUT CONSTANT
    anyArray        : T_Any;
    anyFirstElem    : T_Any;
    nLength         : UDINT;    // items to write
    nTag            : UDINT;    // field + wiretype
    ipFieldCodec    : I_FieldCodec; 
END_VAR

VAR
    nTypeSize       : UDINT;
    nPackedDataSize : UDINT;
    i               : UDINT;
    hr              : HRESULT;
    anyItem         : T_Any;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF ipFieldCodec = 0  THEN
    F_WriteRepeatedField := stState.eWriterErrorCode := E_WriterErrorCode.InternalError;
    stState.bError := TRUE;
    RETURN;
END_IF

IF anyArray.TypeClass <> __SYSTEM.TYPE_CLASS.TYPE_ARRAY THEN
    F_WriteRepeatedField := stState.eWriterErrorCode := E_WriterErrorCode.InvalidDataType;
    stState.bError := TRUE;
    RETURN;
END_IF

nTypeSize := TO_UDINT(anyFirstElem.diSize);

IF nTypeSize = 0 THEN
    F_WriteRepeatedField := stState.eWriterErrorCode := E_WriterErrorCode.InvalidDataType;
    stState.bError := TRUE;
    RETURN;
END_IF

IF ipFieldCodec.IsPackedRepeatedField(nTag) THEN
    // packed: tag, length, and value
    
    hr := F_WriteRawVarint32(aBuffer, stState, nTag);
    IF FAILED(hr) THEN
        F_WriteRepeatedField := hr;
        RETURN;
    END_IF
    
    hr := ipFieldCodec.CalculatePackedDataSize(anyFirstElem, nLength, nPackedDataSize=> nPackedDataSize);
    IF FAILED(hr) THEN
        F_WriteRepeatedField := hr;
        RETURN;
    END_IF
    
    hr := F_WriteLength(aBuffer, stState, nPackedDataSize);
    IF FAILED(hr) THEN
        F_WriteRepeatedField := hr;
        RETURN;
    END_IF
    
    IF nLength < 1 THEN
        RETURN;
    END_IF
    
    anyItem := anyFirstElem;
    FOR i := 0 TO nLength - 1 DO
        anyItem.pValue := anyFirstElem.pValue + (i * TO_UDINT(anyFirstElem.diSize)); 
        hr := ipFieldCodec.ValueWriter(aBuffer, stState, anyItem);
        IF FAILED(hr) THEN
            F_WriteRepeatedField := hr;
            RETURN;
        END_IF
    END_FOR
    
ELSE    
   // Not packed: a simple tag/value pair for each value.
   anyItem := anyFirstElem;
   
   IF nLength < 1 THEN
        hr := F_WriteRawVarint32(aBuffer, stState, nTag);
        IF FAILED(hr) THEN
            F_WriteRepeatedField := hr;
            RETURN;
        END_IF
        hr := F_WriteLength(aBuffer, stState, 0);
        F_WriteRepeatedField := hr;
        RETURN;
    END_IF
   
    FOR i := 0 TO nLength - 1 DO
        hr := F_WriteRawVarint32(aBuffer, stState, nTag);
        IF FAILED(hr) THEN
            F_WriteRepeatedField := hr;
            RETURN;
        END_IF
        
        anyItem.pValue := anyFirstElem.pValue + (i * TO_UDINT(anyFirstElem.diSize)); 
        hr := ipFieldCodec.ValueWriter(aBuffer, stState, anyItem);
        IF FAILED(hr) THEN
            F_WriteRepeatedField := hr;
            RETURN;
        END_IF
    END_FOR
END_IF]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>